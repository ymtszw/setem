const generate = require("../index");

const expectation = `-- This module is generated by \`setem\` command. DO NOT edit manually!


module RecordSetter exposing (..)


s_f1 : a -> { b | f1 : a } -> { b | f1 : a }
s_f1 value__ record__ =
    { record__ | f1 = value__ }


s_f2 : a -> { b | f2 : a } -> { b | f2 : a }
s_f2 value__ record__ =
    { record__ | f2 = value__ }


s_f3 : a -> { b | f3 : a } -> { b | f3 : a }
s_f3 value__ record__ =
    { record__ | f3 = value__ }


s_f3_f1 : a -> { b | f3_f1 : a } -> { b | f3_f1 : a }
s_f3_f1 value__ record__ =
    { record__ | f3_f1 = value__ }


s_f3_f2 : a -> { b | f3_f2 : a } -> { b | f3_f2 : a }
s_f3_f2 value__ record__ =
    { record__ | f3_f2 = value__ }
`;

test("generate from RecordDefAndExpr", () => {
  expect(generate("test/fixtures/RecordDefAndExpr.elm")).toBe(expectation);
});
test("generate from OnlyRecordDef", () => {
  expect(generate("test/fixtures/OnlyRecordDef.elm")).toBe(expectation);
});
test("generate from OnlyRecordExpr", () => {
  expect(generate("test/fixtures/OnlyRecordExpr.elm")).toBe(expectation);
});
test("generate from InvalidAsModuleFile", () => {
  expect(generate("test/fixtures/InvalidAsModuleFile.elm")).toBe(expectation);
});
test("generate from many files at once", () => {
  expect(
    generate([
      "test/fixtures/RecordDefAndExpr.elm",
      "test/fixtures/OnlyRecordDef.elm",
      "test/fixtures/OnlyRecordExpr.elm",
      "test/fixtures/InvalidAsModuleFile.elm",
    ])
  ).toBe(expectation);
});

test("generate from ExtensibleRecord", () => {
  expect(generate("test/fixtures/ExtensibleRecord.elm"))
    .toBe(`-- This module is generated by \`setem\` command. DO NOT edit manually!


module RecordSetter exposing (..)


s_f1 : a -> { b | f1 : a } -> { b | f1 : a }
s_f1 value__ record__ =
    { record__ | f1 = value__ }


s_f2 : a -> { b | f2 : a } -> { b | f2 : a }
s_f2 value__ record__ =
    { record__ | f2 = value__ }


s_f3 : a -> { b | f3 : a } -> { b | f3 : a }
s_f3 value__ record__ =
    { record__ | f3 = value__ }
`);
});

test("generate from PatternMatch", () => {
  expect(generate("test/fixtures/PatternMatch.elm"))
    .toBe(`-- This module is generated by \`setem\` command. DO NOT edit manually!


module RecordSetter exposing (..)


s_f1 : a -> { b | f1 : a } -> { b | f1 : a }
s_f1 value__ record__ =
    { record__ | f1 = value__ }


s_f2 : a -> { b | f2 : a } -> { b | f2 : a }
s_f2 value__ record__ =
    { record__ | f2 = value__ }


s_f3 : a -> { b | f3 : a } -> { b | f3 : a }
s_f3 value__ record__ =
    { record__ | f3 = value__ }
`);
});
